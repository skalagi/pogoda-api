<!DOCTYPE html>
<html>
<head>
    <meta name="robots" content="noindex, nofollow">
    <meta charset="utf-8"/>
    <title>Weather admin | Welome</title>

    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css"/>
    <!-- Latest compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
    <script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
    <style>
        body {
            margin: 0;
        }

        section {
            display: -webkit-box;
            display: -webkit-flex;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-pack: center;
            -webkit-justify-content: center;
            -ms-flex-pack: center;
            justify-content: center;
        }

        div.panel {
            margin: 2em;
        }

        span.badge {
            margin-left: 5em;
        }

        .log-hidden-item {
            display: none;
        }

        .btn-sm {
            margin-top: -.5em
        }
    </style>
</head>

{% macro statusColor(status) %}
    {{ status != 0 or status is null ? "#df340c" : "#01cd4f" }}
{% endmacro %}
<body>

    <nav class="navbar navbar-default">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" href="#">Weather station admin</a>
            </div>

            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <div class="nav navbar-nav">
                    <a class="btn btn-default navbar-btn" href="{{ path('syntax_error_api_home') }}" role="button">Go to API</a>
                    <a class="btn btn-default navbar-btn" href="http://pogoda.ml" role="button">Go to client</a>
                </div>

                <div class="nav navbar-nav navbar-right">
                    <a class="btn btn-danger navbar-btn" href="{{ path('syntax_error_api_admin_logout') }}" role="button">Logout</a>
                </div>
            </div>
        </div>
    </nav>

    <section class="jumbotron">
        {# Battery status #}
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Station status</h3>
            </div>
            <div class="panel-body">
                <ul class="list-group">
                    <li class="list-group-item">
                        <span class="badge" style="background: {{ _self.statusColor(hardware.batteries.windBatteryStatus) }};">&nbsp;</span>
                        Wind sensor battery
                    </li>
                    <li class="list-group-item">
                        <span class="badge" style="background: {{ _self.statusColor(hardware.batteries.rainBatteryStatus) }};">&nbsp;</span>
                        Rain sensor battery
                    </li>
                    <li class="list-group-item">
                        <span class="badge" style="background: {{ _self.statusColor(hardware.batteries.outTempBatteryStatus) }};">&nbsp;</span>
                        Thermometer and hygrometer battery
                    </li>
                    <li class="list-group-item">
                        <span class="badge" style="background: {{ _self.statusColor(hardware.batteries.inTempBatteryStatus) }};">&nbsp;</span>
                        Station console battery
                    </li>
                    <li class="list-group-item">
                        <span class="badge">{{ hardware.last.format("Y-m-d H:i") }}</span>
                        Last update from console
                    </li>
                </ul>
            </div>
        </div>

        {# Database status #}
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Database status</h3>
            </div>
            <div class="panel-body">
                <ul class="list-group">
                    <li class="list-group-item">
                        <span class="badge">{{ database.count.archive }}</span>
                        Archive records count
                    </li>
                    <li class="list-group-item">
                        <span class="badge">{{ database.count.day }}</span>
                        Day records count
                    </li>
                    <li class="list-group-item">
                        <span class="badge">{{ database.size.total }} MB</span>
                        Total size
                    </li>
                    <li class="list-group-item">
                        <span class="badge">{{ database.size.archive }} MB</span>
                        Archive table size
                    </li>
                    <li class="list-group-item">
                        <span class="badge">{{ database.size.rest }} MB</span>
                        Day tables size
                    </li>
                </ul>
            </div>
        </div>

        {# Vhost status #}
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Vhost status</h3>
            </div>
            <div class="panel-body">
                <ul class="list-group">
                    <li class="list-group-item">
                        <span class="badge" style="background: {{ _self.statusColor(not server.forecast.cached) }};">
                            {{ server.forecast.cached ? server.forecast.ttl|replace({'#': 'm.', '@': 's.'}) : 'Not cached' }}
                        </span>
                        Wunderground forecast
                        {% if server.status.forecast is defined %} ({{ server.status.forecast.today.value ~ ', ' ~ server.status.forecast.total }}) {% endif %}
                    </li>

                    <li class="list-group-item">
                        <span class="badge" style="background: {{ _self.statusColor(not server.astronomy.cached) }};">
                            {{ server.astronomy.cached ? server.astronomy.ttl|replace({'#': 'm.', '@': 's.'}) : 'Not cached' }}
                        </span>
                        Wunderground astronomy
                        {% if server.status.astronomy is defined %} ({{ server.status.astronomy.today.value ~ ', ' ~ server.status.astronomy.total }}) {% endif %}
                    </li>

                    <li class="list-group-item">
                        <span class="badge" style="background: {{ _self.statusColor(not server.alerts.cached) }};">
                            {{ server.alerts.cached ? server.alerts.ttl|replace({'#': 'm.', '@': 's.'}) : 'Not cached' }}
                        </span>
                        Wunderground alerts
                        {% if server.status.alerts is defined %} ({{ server.status.alerts.today.value ~ ', ' ~ server.status.alerts.total }}) {% endif %}
                    </li>

                    <li class="list-group-item">
                        <span class="badge">{{ not server.deploy ? '!!!' : server.deploy }}</span>
                         {{ not server.deploy ? 'Deploy running now' : 'Last deployment' }}
                    </li>

                    <li class="list-group-item">
                        <span class="badge">{{ server.branch }}</span>
                        Git branch
                    </li>
                </ul>
            </div>
        </div>
    </section>

    <section class="jumbotron">
        {# Websocket status #}
        <div class="panel panel-default" style="width: 30%">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span>
                        WebSocket status <span id="socket-pid">{{ socket.pid ? '(PID: ' ~ socket.pid ~ ')' : '' }}</span>
                    </span>
                </h3>
            </div>
            <div class="panel-body">
                <ul class="list-group" id="socket-hosts-list">
                    {% if not socket.pid %}
                        <li class="list-group-item list-group-item-danger">Server not running.</li>
                    {% else %}

                        {% for client in socket.hosts %}
                            <li class="list-group-item">
                                <span class="badge">{{ client.connected }}</span>
                                {{ client.ip }}
                            </li>
                        {% else %}
                            <li class="list-group-item list-group-item-warning">Nobody connected.</li>
                        {% endfor %}

                    {% endif %}
                </ul>
            </div>
        </div>

        {# Websocket logs #}
        <div class="panel panel-default" style="width: 50%">
            <div class="panel-heading">
                <h3 class="panel-title">
                    WebSocket logs
                    <span style="float: right;">
                        <button class="btn btn-primary btn-sm" role="button" id="show-all-log">Show all</button>
                    </span>
                </h3>
            </div>
            <div class="panel-body">
                <ul class="list-group">
                    {% if not socket.log %}
                        <li class="list-group-item list-group-item-danger">Cannot open log file.</li>
                    {% else %}
                        {% autoescape false %}
                            {% for logLine in socket.log|reverse %}
                                {% if logLine|length %}
                                    <li class="list-group-item {{ loop.index0 > 10 ? 'log-hidden-item' : '' }}" {{ logLine|length > 115 ? 'title="' ~ logLine ~ '"' }}>
                                        {{ logLine|length > 115 ? logLine|slice(0, 115) ~ "..." : logLine }}
                                    </li>
                                {% endif %}
                            {% else %}
                                <li class="list-group-item list-group-item-warning">Empty log file.</li>
                            {% endfor %}
                        {% endautoescape %}
                    {% endif %}
                </ul>
            </div>
        </div>
    </section>

    <section class="jumbotron" style="padding: 1em 0">
        <form method="POST" style="width: 90%">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title">
                        Mailing
                        <span style="float: right">
                            <button type="button" class="btn btn-default btn-sm" id="show_subscribers">Lista subskrybentów</button>
                            <button type="submit" class="btn btn-default btn-sm">Wyślij</button>
                        </span>
                    </h3>
                </div>
                <div class="panel-body">
                    <input type="text" name="subject" placeholder="Temat.." style="width: 100%; margin-bottom: .5em" class="form-control" required/>
                    <textarea name="mailing" id="mailing" placeholder="Treść maila.." style="width: 100%; min-height: 360px"></textarea>
                </div>
            </div>
        </form>
    </section>
</body>

<script>
    /* Show or hide webSockets logs. */
    var showed = false;
    document.getElementById('show-all-log').addEventListener('click', function() {
        var lines = document.getElementsByClassName('log-hidden-item');
        for(var i=0; i < lines.length; i++) {
            lines[i].style.display = showed ? 'none' : 'block';
        }
        this.innerText = showed ? 'Show all' : 'Hide old';
        if(showed) {
            this.className = this.className.replace('btn-danger', '');
            this.className += ' btn-primary';
        } else {
            this.className = this.className.replace('btn-primary', '');
            this.className += ' btn-danger';
        }
        showed = !showed;
    });

    /* Refresh webSocket server status and clients list. */
    var intervalSec = 3;
    (function timer() {
        $.get(location.href, {}, function(socket) {
            document.getElementById('socket-pid').innerText = socket.pid ? '(PID: '+ socket.pid+')' : '';

            var $clients = document.getElementById('socket-hosts-list');
            $clients.innerHTML = '';
            if(!socket.pid) {
                var $pidErrorItem = document.createElement('li');
                $pidErrorItem.className = 'list-group-item list-group-item-danger';
                $pidErrorItem.innerText = 'Server not running.';
                $clients.appendChild($pidErrorItem);
                setTimeout(timer, intervalSec*1000);
                return;
            }
            if(!socket.hosts.length) {
                var $emptyHostsWarn = document.createElement('li');
                $emptyHostsWarn.className = 'list-group-item list-group-item-warning';
                $emptyHostsWarn.innerText = 'Nobody connected.';
                $clients.appendChild($emptyHostsWarn);
                setTimeout(timer, intervalSec*1000);
                return;
            }
            for(var i=0; i < socket.hosts.length; i++) {
                var $newHost = document.createElement('li');
                $newHost.className = 'list-group-item';

                var $badge = document.createElement('span');
                $badge.className = 'badge';
                $badge.innerText = socket.hosts[i].connected;
                $newHost.appendChild($badge);
                $newHost.innerText += socket.hosts[i].ip;
                $clients.appendChild($newHost);
            }
            setTimeout(timer, intervalSec*1000);
        });
    })();
    /* Subscribers list */
    {% autoescape false %}
    document.getElementById('show_subscribers').onclick = function() {
        swal({
            title: "Subskrybenci",
            text: '<ul class="list-group">{% for subscriber in subscribers %}<li class="list-group-item list-group-item-default">{{ subscriber }}</li>{% else %}<li class="list-group-item list-group-item-danger">Brak subskrybentów.</li>{% endfor %}</ul>',
            html: true
        });
    };
    {% endautoescape %}
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/tinymce/4.3.7/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: 'textarea',
        height: 500,
        theme: 'modern',
        plugins: [
            'advlist autolink lists link image charmap print preview hr anchor pagebreak',
            'searchreplace wordcount visualblocks visualchars code fullscreen',
            'insertdatetime media nonbreaking save table contextmenu directionality',
            'emoticons template paste textcolor colorpicker textpattern imagetools'
        ],
        toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        toolbar2: 'print preview media | forecolor backcolor emoticons',
        image_advtab: true
    });
</script>

{% if sendForm >= 0 %}
    <script>
        swal("Wysłano mailing!", "Pomyślnie wysłano {{ sendForm }} wiadomości!", "success");
    </script>
{% endif %}
</html>

